<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.my.spring.cloud</groupId>
  <artifactId>MySpringBoot</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>MySpringBoot</name>
  <url>http://maven.apache.org</url>

    
   <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.6.RELEASE</version>
        <relativePath/> 
   </parent>
    
   <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

  <dependencies>
  
  		<!-- 引入web环境 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- mq依赖，分析spring自动配置原理的时候加入的包 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        
        <!-- 引入其他项目的maven,扫描包方式下可以直接获取其他项目的bean -->
         <!-- <dependency>
			  <groupId>com.spring.cloud</groupId>
			  <artifactId>mypringboot-copy</artifactId>
			  <version>0.0.1-SNAPSHOT</version>
		</dependency> -->
		
		<!-- 导入配置文件处理器，配置文件进行绑定就会有提示 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!-- 自己写的启动器，测试redis启动器,试图引入jar包后直接使用redis工具类，redis注解 -->
		<!-- <dependency>
		  <groupId>com.my.springboot</groupId>
		  <artifactId>my-spring-boot-starter-redis-copy</artifactId>
		  <version>0.0.1-SNAPSHOT</version>
		</dependency> -->
  </dependencies>
  
    <!-- 这个插件，可以将应用打包成一个可执行的jar包；打包的时候记得有app.class主类-->
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
  
</project>
